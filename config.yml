# Data Controller Configuration
application:
  name: "data-controller"
  version: "1.0.0"
  log_level: "debug" # debug, info, warn, error
  # Add runtime controls for ops
  hot_reload: true            # enable SIGHUP-triggered reload of config
  sighup_watch: true          # whether process should listen for SIGHUP
  pid_file: "/var/run/data-controller.pid" # optional pid file for launchd/system

# WebSocket connection settings
websocket:
  url: "wss://api-pub.bitfinex.com/ws/2"
  reconnect_interval: "5s"
  heartbeat_timeout: "45s"
  ping_interval: "30s"
  max_connections: 5
  connection_timeout: "10s"
  conf_flags: 537100288

# Symbols to subscribe to
symbols:
  - "tBTCUSD"
  #- "tETHUSD"

# Channel subscriptions configuration
channels:
  ticker:
    enabled: true
    sampling_rate: "1s" # Reduce from real-time to 1Hz

  trades:
    enabled: true
    msg_type: "tu" # Only save "trade updated" messages to avoid duplicates

  books:
    enabled: true
    precision: "P0" # P0, P1, P2, P3, P4
    frequency: "F0" # F0 (real-time), F1 (2 seconds)
    length: 25 # 1, 25, 100, 250

  raw_books:
    enabled: true
    precision: "R0" # Raw order books
    frequency: "F0"
    length: 25

# Data storage configuration
storage:
  base_path: "/Volumes/SSD/AI/Trade/TradeEngine2/data_controller/data"
  segment_size_mb: 256 # Create new folder every 256MB
  compression: "zstd" # zstd, gzip, snappy
  compression_level: 3
  parquet:
    row_group_size_mb: 64
    flush_interval: "5s"
    flush_row_count: 10000
  wal:
    enabled: true
    compression: "zstd"
    retention_hours: 24
  # convenience derived paths (implementation may use these)
  paths:
    parquet_path: "${storage.base_path}/parquet"
    wal_path: "${storage.base_path}/wal"

# Metadata and schema settings
metadata:
  schema_version: "bfx.v1"
  include_checksum_validation: true
  include_sequence_numbers: true
  include_timestamps: true

# Monitoring and metrics
monitoring:
  prometheus:
    enabled: true
    port: 9090
    path: "/metrics"
  health_check:
    enabled: true
    port: 8080
    path: "/health"
  logging:
    format: "json"
    output: "stdout"
    file_path: "/var/log/data-controller.log"

  # InfluxDB (Docker recommended) guidance for operators
  influx:
    enabled: true
    docker_recommended: true
    bind_address: "127.0.0.1:8086"
    named_volume: "influxdb_data"    # use named volume, avoid host bind on macOS
    backup_bind_mount: "/host/backups/influx" # optional backup mount on host
    restart_policy: "unless-stopped"
    buckets:
      - name: "rt-fast"
        retention_days: 7
      - name: "agg-30s"
        retention_days: 30
      - name: "logs"
        retention_days: 90

# GUI settings
gui:
  title: "Data Controller"
  width: 800
  height: 600
  theme: "dark" # dark, light
  auto_start: false
  show_statistics: true
  refresh_interval: "1s"

# Performance and reliability settings
performance:
  buffer_size: 100000
  worker_count: 4
  max_memory_mb: 2048
  gc_interval: "30s"
  circuit_breaker:
    enabled: true
    failure_threshold: 5
    reset_timeout: "30s"

# New validation and env-override helpers
validation:
  config_schema_version: 1
  validate_on_start: true     # fail fast if config invalid
  fail_on_invalid: true
  schema_path: "config/schema.json" # implementation should load & validate against this

env_overrides:
  enabled: true
  mappings:
    WEBSOCKET_URL: websocket.url
    STORAGE_BASE_PATH: storage.base_path
    LOG_LEVEL: application.log_level
    PROM_PORT: monitoring.prometheus.port

# Development and debugging
debug:
  enable_profiling: false
  profiling_port: 6060
  verbose_logging: false
  save_raw_messages: true
  simulate_network_issues: false
